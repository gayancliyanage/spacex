{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://api.spacexdata.com/v4';\nconst NASA_API_BASE_URL = 'https://api.nasa.gov';\nconst NASA_API_KEY = 'DEMO_KEY'; // Replace with your NASA API key\n\nexport const fetchNASAAstronautData = async name => {\n  try {\n    const response = await fetch(`${NASA_API_BASE_URL}/planetary/apod?api_key=${NASA_API_KEY}&count=1`);\n    if (!response.ok) throw new Error('NASA API request failed');\n    const data = await response.json();\n    return data[0];\n  } catch (error) {\n    console.error('Error fetching NASA astronaut data:', error);\n    return null;\n  }\n};\nexport const fetchCrewMember = async crewId => {\n  try {\n    const response = await axios.get(`${API_URL}/crew/${crewId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crew member:', error);\n    return null;\n  }\n};\nexport const fetchLaunches = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/launches`);\n    return response.data.map(launch => {\n      var _launch$links, _launch$links2, _launch$links3, _launch$links3$flickr, _launch$links4, _launch$links4$flickr;\n      return {\n        ...launch,\n        links: {\n          ...launch.links,\n          patch: ((_launch$links = launch.links) === null || _launch$links === void 0 ? void 0 : _launch$links.patch) || {},\n          flickr: {\n            ...((_launch$links2 = launch.links) === null || _launch$links2 === void 0 ? void 0 : _launch$links2.flickr),\n            original: ((_launch$links3 = launch.links) === null || _launch$links3 === void 0 ? void 0 : (_launch$links3$flickr = _launch$links3.flickr) === null || _launch$links3$flickr === void 0 ? void 0 : _launch$links3$flickr.original) || [],\n            small: ((_launch$links4 = launch.links) === null || _launch$links4 === void 0 ? void 0 : (_launch$links4$flickr = _launch$links4.flickr) === null || _launch$links4$flickr === void 0 ? void 0 : _launch$links4$flickr.small) || []\n          }\n        }\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching launches:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_URL","NASA_API_BASE_URL","NASA_API_KEY","fetchNASAAstronautData","name","response","fetch","ok","Error","data","json","error","console","fetchCrewMember","crewId","get","fetchLaunches","map","launch","_launch$links","_launch$links2","_launch$links3","_launch$links3$flickr","_launch$links4","_launch$links4$flickr","links","patch","flickr","original","small"],"sources":["/Users/gayan_liyanage/Documents/GitHub/spacex/src/services/spaceXApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.spacexdata.com/v4';\nconst NASA_API_BASE_URL = 'https://api.nasa.gov';\nconst NASA_API_KEY = 'DEMO_KEY'; // Replace with your NASA API key\n\nexport const fetchNASAAstronautData = async (name) => {\n  try {\n    const response = await fetch(\n      `${NASA_API_BASE_URL}/planetary/apod?api_key=${NASA_API_KEY}&count=1`\n    );\n    if (!response.ok) throw new Error('NASA API request failed');\n    const data = await response.json();\n    return data[0];\n  } catch (error) {\n    console.error('Error fetching NASA astronaut data:', error);\n    return null;\n  }\n};\n\nexport const fetchCrewMember = async (crewId) => {\n  try {\n    const response = await axios.get(`${API_URL}/crew/${crewId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crew member:', error);\n    return null;\n  }\n};\n\nexport const fetchLaunches = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/launches`);\n    return response.data.map(launch => ({\n      ...launch,\n      links: {\n        ...launch.links,\n        patch: launch.links?.patch || {},\n        flickr: {\n          ...launch.links?.flickr,\n          original: launch.links?.flickr?.original || [],\n          small: launch.links?.flickr?.small || []\n        }\n      }\n    }));\n  } catch (error) {\n    console.error('Error fetching launches:', error);\n    return [];\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,+BAA+B;AAC/C,MAAMC,iBAAiB,GAAG,sBAAsB;AAChD,MAAMC,YAAY,GAAG,UAAU,CAAC,CAAC;;AAEjC,OAAO,MAAMC,sBAAsB,GAAG,MAAOC,IAAI,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,iBAAiB,2BAA2BC,YAAY,UAC7D,CAAC;IACD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMN,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,SAASc,MAAM,EAAE,CAAC;IAC7D,OAAOT,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,WAAW,CAAC;IACvD,OAAOK,QAAQ,CAACI,IAAI,CAACQ,GAAG,CAACC,MAAM;MAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,qBAAA;MAAA,OAAK;QAClC,GAAGN,MAAM;QACTO,KAAK,EAAE;UACL,GAAGP,MAAM,CAACO,KAAK;UACfC,KAAK,EAAE,EAAAP,aAAA,GAAAD,MAAM,CAACO,KAAK,cAAAN,aAAA,uBAAZA,aAAA,CAAcO,KAAK,KAAI,CAAC,CAAC;UAChCC,MAAM,EAAE;YACN,KAAAP,cAAA,GAAGF,MAAM,CAACO,KAAK,cAAAL,cAAA,uBAAZA,cAAA,CAAcO,MAAM;YACvBC,QAAQ,EAAE,EAAAP,cAAA,GAAAH,MAAM,CAACO,KAAK,cAAAJ,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAcM,MAAM,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsBM,QAAQ,KAAI,EAAE;YAC9CC,KAAK,EAAE,EAAAN,cAAA,GAAAL,MAAM,CAACO,KAAK,cAAAF,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAcI,MAAM,cAAAH,qBAAA,uBAApBA,qBAAA,CAAsBK,KAAK,KAAI;UACxC;QACF;MACF,CAAC;IAAA,CAAC,CAAC;EACL,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}